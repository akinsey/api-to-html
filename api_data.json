[  {    "type": "GET",    "url": "/recover/:query",    "title": "Recover Account",    "name": "AccountRecoveryReq",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to recover an account by username or email. Sends an email with a URL to visit to reset the user's account password.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "query",            "description": "<p>The email or username to attempt to recover</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "success",            "description": "<p>true if recovery email is sent</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>The username or email is not found</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error updating the user account's reset token information</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "POST",    "url": "/reset",    "title": "Reset Account Password",    "name": "AccountRecoveryReset",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to reset an account password after recovering an account.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user whose password is being reset</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "password",            "description": "<p>The new account password</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "query",            "description": "<p>The new account password confirmation</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "token",            "description": "<p>The token for resetting the account password</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "message",            "description": "<p>Password Successfully Reset</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>The user account could not be found or the reset token is invalid</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error updating the user account's reset token information</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "GET",    "url": "/reset/:username/:token/validate",    "title": "Validate Account Reset Token",    "name": "AccountRecoveryToken",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to check the validity of the reset token. Verifys that the reset token is for the correct user and that it is not expired.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user whose reset token is to be checked</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "token",            "description": "<p>The token for resetting the account password</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "token_valid",            "description": "<p>true if the token is valid false if it is not</p> "          },          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "token_expired",            "description": "<p>true if token is expired false if not. Undefined if token is invalid</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>The user account could not be found</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "GET",    "url": "/authenticate",    "title": "Authenticate User",    "name": "Authenticate_User",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to check the logged in user's authentication.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>User's username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "avatar",            "description": "<p>User's avatar url</p> "          },          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "roles",            "description": "<p>Array of user's roles</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>returned when user is not authenticated</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "POST",    "url": "/confirm",    "title": "Confirm Account",    "name": "Confirm_Account",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to confirm a newly registered account when account verification is enabled in the admin panel.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>User's unique username.</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "token",            "description": "<p>User's confirmation token.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "token",            "description": "<p>User's authentication token</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "avatar",            "description": "<p>User's avatar url</p> "          },          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "roles",            "description": "<p>Array of user's roles</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>Account was not found or confirmation token doesn't match</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue looking up the user in the db</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "GET",    "url": "/register/email/:email",    "title": "Email Availability",    "name": "Email_Availability",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to check if an email is available when registering a new account.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "email",            "description": "<p>The email to check</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "found",            "description": "<p>true if email exists false if not</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "POST",    "url": "/login",    "title": "Login",    "name": "Login",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to log a user into their account.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>User's unique username</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "password",            "description": "<p>User's password</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "token",            "description": "<p>User's authentication token</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>User's unique username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userId",            "description": "<p>User's unique id</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>Invalid credentials were provided or the account hasn't been confirmed</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue looking up the user in the db</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "DELETE",    "url": "/logout",    "title": "Logout",    "name": "Logout",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to log a user out of their account.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "success",            "description": "<p>true if user is successfully logged out</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>No user is currently logged in</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue deleteing user's web token</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "POST",    "url": "/register",    "title": "Register (w/o account verification)",    "name": "RegisterNoVerify",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to register a new account with account verification disabled in admin settings.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>User's unique username.</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "email",            "description": "<p>User's email address.</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "password",            "description": "<p>User's password</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "confirmation",            "description": "<p>User's confirmed password</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "token",            "description": "<p>User's authentication token</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "avatar",            "description": "<p>User's avatar url</p> "          },          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "roles",            "description": "<p>Array of user's roles</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>There was an error creating the user</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "POST",    "url": "/register",    "title": "Register (w/ account verification)",    "name": "RegisterVerify",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to register a new account with account verification enabled in admin settings. This will send an email to the user with the account verification link.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>User's unique username.</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "email",            "description": "<p>User's email address.</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "password",            "description": "<p>User's password</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "confirmation",            "description": "<p>User's confirmed password</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "message",            "description": "<p>Account creation success message</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>Created user's username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "confirm_token",            "description": "<p>Created user's account confirmation token</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "confirm_url",            "description": "<p>URL to visit to confirm user's account</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>There was an error creating the user</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "type": "GET",    "url": "/register/username/:username",    "title": "Username Availability",    "name": "Username_Availability",    "group": "Auth",    "version": "0.3.0",    "description": "<p>Used to check if a username is available when registering a new account.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username to check</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "found",            "description": "<p>true if username exists false if not</p> "          }        ]      }    },    "filename": "server/routes/auth/config.js",    "groupTitle": "Auth"  },  {    "version": "0.3.0",    "group": "Boards",    "type": "GET",    "url": "/boards/all",    "title": "All",    "name": "AllBoard",    "description": "<p>Used to find all boards.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "boards",            "description": "<p>Array containing all of the forums boards</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue finding all boards</p> "          }        ]      }    },    "filename": "server/routes/boards/config.js",    "groupTitle": "Boards"  },  {    "version": "0.3.0",    "group": "Boards",    "type": "POST",    "url": "/boards",    "title": "Create",    "name": "CreateBoard",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>Used to create a new board</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The name of the board to be created</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "description",            "description": "<p>The description text for the board</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue creating the board</p> "          }        ]      }    },    "filename": "server/routes/boards/config.js",    "groupTitle": "Boards",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The board's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The board's name</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "description",            "description": "<p>The boards description</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the board was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the board was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the board was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Boards",    "type": "DELETE",    "url": "/boards/:id",    "title": "Delete",    "name": "DeleteBoard",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>Used to delete an existing board from the forum.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The id of the board being deleted</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue deleting the board</p> "          }        ]      }    },    "filename": "server/routes/boards/config.js",    "groupTitle": "Boards",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The board's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The board's name</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "description",            "description": "<p>The boards description</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the board was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the board was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the board was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Boards",    "type": "POST",    "url": "/boards/:id",    "title": "Find",    "name": "FindBoard",    "description": "<p>Used to find a board.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The id of the board to lookup</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "thread_count",            "description": "<p>Number of threads this board contains</p> "          },          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "post_count",            "description": "<p>Number of posts this board contains</p> "          },          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "moderators",            "description": "<p>Moderators of this board</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The board's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The board's name</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "description",            "description": "<p>The boards description</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the board was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the board was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the board was imported</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue finding the board</p> "          }        ]      }    },    "filename": "server/routes/boards/config.js",    "groupTitle": "Boards"  },  {    "version": "0.3.0",    "group": "Boards",    "type": "POST",    "url": "/boards/import",    "title": "Import",    "name": "ImportBoard",    "permission": [      {        "name": "Super Administrator"      }    ],    "description": "<p>Used to import a board. Currently only SMF is supported for import.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>object</p> ",            "optional": false,            "field": "smf",            "description": "<p>Object containing SMF metadata</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": false,            "field": "smf.ID_BOARD",            "description": "<p>Legacy smf board id</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The board's unique id</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The board's name</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "description",            "description": "<p>The boards description</p> "          },          {            "group": "Payload",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the board was created</p> "          },          {            "group": "Payload",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the board was updated</p> "          },          {            "group": "Payload",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the board was imported</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "smf",            "description": "<p>Object containing SMF metadata</p> "          },          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "smf.ID_BOARD",            "description": "<p>Legacy smf board id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The board's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The board's name</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "description",            "description": "<p>The boards description</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the board was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the board was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the board was imported</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue creating the board</p> "          }        ]      }    },    "filename": "server/routes/boards/config.js",    "groupTitle": "Boards"  },  {    "version": "0.3.0",    "group": "Boards",    "type": "POST",    "url": "/boards/:id",    "title": "Update",    "name": "UpdateBoard",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>Used to update an existing boards information.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The id of the board being updated</p> "          }        ],        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The name of the board to be created</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "description",            "description": "<p>The description text for the board</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue updating the board</p> "          }        ]      }    },    "filename": "server/routes/boards/config.js",    "groupTitle": "Boards",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The board's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The board's name</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "description",            "description": "<p>The boards description</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the board was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the board was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the board was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Breadcrumbs",    "type": "GET",    "url": "/breadcrumbs",    "title": "Find",    "name": "FindBreadcrumbs",    "description": "<p>Used to get the breadcrumbs from board, thread, category or post id</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the board, thread, category or post to retrieve breadcrumbs for</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "optional": false,            "field": "type",            "description": "<p>The type of the id being provided (board, category, thread, or post)</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "breadcrumbs",            "description": "<p>Array containing breadcrumb objects</p> "          }        ],        "Breadcrumb Object": [          {            "group": "Breadcrumb Object",            "type": "<p>string</p> ",            "optional": false,            "field": "label",            "description": "<p>Label for the breadcrumb link</p> "          },          {            "group": "Breadcrumb Object",            "type": "<p>string</p> ",            "optional": false,            "field": "url",            "description": "<p>URL for backing the label</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue retrieving the breadcrumbs</p> "          }        ]      }    },    "filename": "server/routes/breadcrumbs/config.js",    "groupTitle": "Breadcrumbs"  },  {    "version": "0.3.0",    "group": "Categories",    "type": "GET",    "url": "/boards",    "title": "All Categories",    "name": "AllCategories",    "description": "<p>Used to retrieve all boards within their respective categories.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "categories",            "description": "<p>Array containing all of the forums boards in their respective categories</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue retrieving categories</p> "          }        ]      }    },    "filename": "server/routes/boards/config.js",    "groupTitle": "Categories"  },  {    "version": "0.3.0",    "group": "Categories",    "type": "POST",    "url": "/boards/categories",    "title": "Update Categories",    "name": "UpdateCategories",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>Used to update boards within their categories.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>object[]</p> ",            "optional": false,            "field": "boardMapping",            "description": "<p>Array containing mapping of boards and categories</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "boardMapping.id",            "description": "<p>The id of the category or board</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "boardMapping.name",            "description": "<p>The name of the category or board</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "allowedValues": [              "\"board\"",              "\"category\""            ],            "optional": false,            "field": "boardMapping.type",            "description": "<p>The type of the mapping object</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": false,            "field": "boardMapping.view_order",            "description": "<p>The view order of the board or category</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "boardMapping.category_id",            "description": "<p>If type is &quot;board&quot; the id of the category the board belongs to</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "boardMapping.parent_id",            "description": "<p>If type is &quot;board&quot; and the board is a child board, the id of the parent board</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "operations",            "description": "<p>Array containing all of the operations performed while updating categories</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue updating categories/boards</p> "          }        ]      }    },    "filename": "server/routes/boards/config.js",    "groupTitle": "Categories"  },  {    "version": "0.3.0",    "group": "Posts",    "type": "POST",    "url": "/posts",    "title": "Create",    "name": "CreatePost",    "permission": [      {        "name": "User"      }    ],    "description": "<p>Used to create a new post.</p> ",    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue creating the post</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user who created the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the post was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Posts",    "type": "DELETE",    "url": "/posts/:id",    "title": "Delete",    "name": "DeletePost",    "permission": [      {        "name": "User (Post's Author) or Admin"      }    ],    "description": "<p>Used to delete a post.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The Id of the post to delete</p> "          }        ]      }    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "BadRequest",            "description": "<p>Post Already Deleted</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue deleting the post</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user who created the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the post was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Posts",    "type": "GET",    "url": "/posts/:id",    "title": "Find",    "name": "FindPost",    "description": "<p>Used to find a post.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post to retrieve</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue finding the post</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user who created the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the post was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Posts",    "type": "POST",    "url": "/posts/import",    "title": "Import",    "name": "ImportPost",    "permission": [      {        "name": "Super Administrator"      }    ],    "description": "<p>Used to import a post. Currently only SMF is supported.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>object</p> ",            "optional": false,            "field": "smf",            "description": "<p>Object containing SMF metadata</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": false,            "field": "smf.ID_MEMBER",            "description": "<p>Legacy smf user id</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": false,            "field": "smf.ID_TOPIC",            "description": "<p>Legacy smf thread id</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": false,            "field": "smf.ID_MSG",            "description": "<p>Legacy smf post id</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "smf.posterName",            "description": "<p>Legacy smf username</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue importing the post</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user who created the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the post was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Posts",    "type": "GET",    "url": "/posts",    "title": "Page By Thread",    "name": "PagePostsByThread",    "description": "<p>Used to page through posts by thread.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread to retrieve posts from</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "page",            "defaultValue": "1",            "description": "<p>Which page of posts to retrieve</p> "          },          {            "group": "Query",            "type": "<p>mixed</p> ",            "optional": false,            "field": "limit",            "description": "<p>Number indicating how many posts to retrieve per page. Also accepts string 'all' to retrieve all posts</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "posts",            "description": "<p>Array containing posts for particular page and thread</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue finding the posts for thread</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts"  },  {    "version": "0.3.0",    "group": "Posts",    "type": "GET",    "url": "/posts/user/:username",    "title": "Page By User",    "name": "PagePostsByUser",    "description": "<p>Used to page through posts made by a particular user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user's whose posts to page through</p> "          }        ],        "Query": [          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "page",            "defaultValue": "1",            "description": "<p>Which page of the user's posts to retrieve</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "limit",            "defaultValue": "10",            "description": "<p>How many posts to return per page</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"created_at\"",              "\"updated_at\"",              "\"title\""            ],            "optional": false,            "field": "field",            "description": "<p>The field to sort the posts by</p> "          },          {            "group": "Query",            "type": "<p>boolean</p> ",            "optional": false,            "field": "desc",            "defaultValue": "false",            "description": "<p>True to sort descending, false to sort ascending</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "posts",            "description": "<p>Array containing posts for a particular user</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue finding posts for the user</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts"  },  {    "version": "0.3.0",    "group": "Posts",    "type": "GET",    "url": "/posts/user/:username/count",    "title": "Page By User Count",    "name": "PagePostsByUserCount",    "description": "<p>Retrieves the number of posts created by a particular user.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user's post count to retrieve</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "count",            "description": "<p>Number of posts created by this user</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue retrieving the post count</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts"  },  {    "version": "0.3.0",    "group": "Posts",    "type": "DELETE",    "url": "/posts/:id/purge",    "title": "Purge",    "name": "PurgePost",    "permission": [      {        "name": "Admin"      }    ],    "description": "<p>Used to purge a post.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The Id of the post to purge</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue purging the post</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user who created the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the post was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Posts",    "type": "POST",    "url": "/posts/:id",    "title": "Undelete",    "name": "UndeletePost",    "permission": [      {        "name": "User (Post's Author) or Admin"      }    ],    "description": "<p>Used to undo a deleted post.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The Id of the post to undo deletion on</p> "          }        ]      }    },    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "BadRequest",            "description": "<p>Post Not Deleted</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue undeleting the post</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user who created the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the post was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Posts",    "type": "POST",    "url": "/posts/:id",    "title": "Update",    "name": "UpdatePost",    "permission": [      {        "name": "User (Post's Author) or Admin"      }    ],    "description": "<p>Used to update a post.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post being updated</p> "          }        ],        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue updating the post</p> "          }        ]      }    },    "filename": "server/routes/posts/config.js",    "groupTitle": "Posts",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unique id of the thread the post belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user who created the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The post's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The post's body as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the post was imported</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Reports",    "type": "GET",    "url": "/admin/reports/postnotes/:postReportId/count",    "title": "(Admin) Count Post Report Notes",    "name": "CountPostReportNotes",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to count how many post moderation report notes there are for a particular report. This is used to determine how many pages to show for paginating through report notes.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "postReportId",            "description": "<p>The unique id of the post report to retrieve notes for</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "count",            "description": "<p>The number of post report notes for the provided post report id</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error retrieving the post report notes count.</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "GET",    "url": "/admin/reports/posts/count",    "title": "(Admin) Count Post Reports",    "name": "CountPostReports",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to count how many post moderation reports there are. This is used to determine how many pages to show for paginating through reports.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"Pending\"",              "\"Reviewed\"",              "\"Ignored\"",              "\"Bad Report\""            ],            "optional": true,            "field": "status",            "description": "<p>The status of the post reports you want a count for</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "optional": true,            "field": "search",            "description": "<p>Allows user to filter count by their search string</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "count",            "description": "<p>The number of post reports</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error retrieving the post report count.</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "GET",    "url": "/admin/reports/usernotes/:userReportId/count",    "title": "(Admin) Count User Report Notes",    "name": "CountUserReportNotes",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to count how many user moderation report notes there are for a particular report. This is used to determine how many pages to show for paginating through report notes.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "userReportId",            "description": "<p>The unique id of the user report to retrieve notes for</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "count",            "description": "<p>The number of user report notes for the provided user report id</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error retrieving the user report notes count.</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "GET",    "url": "/admin/reports/users/count",    "title": "(Admin) Count User Reports",    "name": "CountUserReports",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to count how many user moderation reports there are. This is used to determine how many pages to show for paginating through reports.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"Pending\"",              "\"Reviewed\"",              "\"Ignored\"",              "\"Bad Report\""            ],            "optional": true,            "field": "status",            "description": "<p>The status of the user reports you want a count for</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "optional": true,            "field": "search",            "description": "<p>Allows user to filter count by their search string</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "count",            "description": "<p>The number of user reports</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error retrieving the user report count.</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "POST",    "url": "/reports/users",    "title": "Create Post Report",    "name": "CreatePostReport",    "permission": [      {        "name": "Users"      }    ],    "description": "<p>Used to report a post for moderators/administrators to review.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_user_id",            "description": "<p>The unique id of the user initiating the report</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_reason",            "description": "<p>The reporter's reason for reporting the offending post</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "offender_post_id",            "description": "<p>The unique id of the post being reported</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post report which was created</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "status",            "description": "<p>The status of the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_user_id",            "description": "<p>The unique id of the user initiating the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_reason",            "description": "<p>The reporter's reason for reporting the offending post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reviewer_user_id",            "description": "<p>The unique id of the user reviewing the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "offender_post_id",            "description": "<p>The unique id of the post being reported</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post report was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post report was updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue creating the post report</p> "          }        ]      }    },    "filename": "server/routes/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "POST",    "url": "/admin/reports/postnotes",    "title": "(Admin) Create Post Report Note",    "name": "CreatePostReportNote",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to leave a note on post moderation reports.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "report_id",            "description": "<p>The id of the post report to leave the note on</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The id of the post leaving the post report note</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "note",            "description": "<p>The note being left on the post report</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id for the post report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "report_id",            "description": "<p>The id of the post report to leave the note on</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The id of the user leaving the post report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user who left the post report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "avatar",            "description": "<p>The url to the avatar of the user who left the post report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "note",            "description": "<p>The note being left on the post report</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post report note was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post report note was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error creating the post report note</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "POST",    "url": "/reports/users",    "title": "Create User Report",    "name": "CreateUserReport",    "permission": [      {        "name": "Users"      }    ],    "description": "<p>Used to report a user for moderators/administrators to review.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_user_id",            "description": "<p>The unique id of the user initiating the report</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_reason",            "description": "<p>The reporter's reason for reporting the offending user</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "offender_user_id",            "description": "<p>The unique id of the user being reported</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the user report which was created</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "status",            "description": "<p>The status of the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_user_id",            "description": "<p>The unique id of the user initiating the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_reason",            "description": "<p>The reporter's reason for reporting the offending user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reviewer_user_id",            "description": "<p>The unique id of the user reviewing the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "offender_user_id",            "description": "<p>The unique id of the user being reported</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the user report was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the user report was updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue creating the user report</p> "          }        ]      }    },    "filename": "server/routes/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "POST",    "url": "/admin/reports/usernotes",    "title": "(Admin) Create User Report Note",    "name": "CreateUserReportNote",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to leave a note on user moderation reports.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "report_id",            "description": "<p>The id of the user report to leave the note on</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The id of the user leaving the user report note</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "note",            "description": "<p>The note being left on the user report</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id for the user report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "report_id",            "description": "<p>The id of the user report to leave the note on</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The id of the user leaving the user report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user who left the user report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "avatar",            "description": "<p>The url to the avatar of the user who left the user report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "note",            "description": "<p>The note being left on the user report</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the user report note was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the user report note was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error creating the user report note</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "GET",    "url": "/admin/reports/posts",    "title": "(Admin) Page Post Report",    "name": "PagePostReport",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to page through post moderation reports.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "page",            "defaultValue": "1",            "description": "<p>The page of post reports to retrieve</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "limit",            "defaultValue": "10",            "description": "<p>The number of post reports to retrieve per page</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"Pending\"",              "\"Reviwed\"",              "\"Ignored\"",              "\"Bad Report\""            ],            "optional": false,            "field": "filter",            "description": "<p>Used to filter reports by their status</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"created_at\"",              "\"priority\"",              "\"reporter_username\"",              "\"offender_created_at\"",              "\"offender_title\"",              "\"offender_author_username\""            ],            "optional": false,            "field": "field",            "defaultValue": "created_at",            "description": "<p>Indicates which column to sort by, used for table sorting</p> "          },          {            "group": "Query",            "type": "<p>boolean</p> ",            "optional": false,            "field": "desc",            "defaultValue": "false",            "description": "<p>Boolean indicating whether or not to sort the results in descending order</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "optional": true,            "field": "search",            "description": "<p>String used to search for a report by username</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "postReports",            "description": "<p>An array of post reports. Sort order varies depending on the query parameters passed in.</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.id",            "description": "<p>The unique id of the post report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.status",            "description": "<p>The status of the post report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.reviewer_user_id",            "description": "<p>The unique id of the user who reviewed the post report</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "postReports.offender_ban_expiration",            "description": "<p>If the user is banned, the expiration of their ban</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.offender_post_id",            "description": "<p>The unique id of the offending post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.offender_thread_id",            "description": "<p>The unique id of the offending post's thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.offender_title",            "description": "<p>The title of the offending post</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "postReports.offender_created_at",            "description": "<p>Timestamp of the offending post was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "postReports.offender_author_created_at",            "description": "<p>Timestamp of the offending post's author created date</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.offender_author_username",            "description": "<p>The username of the offending post's author</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.offender_author_email",            "description": "<p>The email of the user who created the offending post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.offender_author_id",            "description": "<p>The unique id of the offending post's author</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.reporter_reason",            "description": "<p>The reason for the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.reporter_user_id",            "description": "<p>The unique id of the reporting user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReports.reporter_username",            "description": "<p>The username of the reporting user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "postReports.created_at",            "description": "<p>Timestamp of when the post report was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "postReports.updated_at",            "description": "<p>Timestamp of when the post report was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error retrieving the post reports</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "GET",    "url": "/admin/reports/postnotes/:postReportId",    "title": "(Admin) Page Post Report Notes",    "name": "PagePostReportNotes",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to page through post moderation report notes.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "postReportId",            "description": "<p>The unique id of the post report to retrieve notes for</p> "          }        ],        "Query": [          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "page",            "defaultValue": "1",            "description": "<p>The page of post report notes to retrieve</p> "          },          {            "group": "Query",            "type": "<p>mixed</p> ",            "size": "1..n",            "allowedValues": [              "\"all\""            ],            "optional": false,            "field": "limit",            "defaultValue": "10",            "description": "<p>The number of post report notes to retrieve per page</p> "          },          {            "group": "Query",            "type": "<p>boolean</p> ",            "optional": false,            "field": "desc",            "defaultValue": "false",            "description": "<p>Boolean indicating whether or not to sort the results in descending order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "postReportNotes",            "description": "<p>An array of post report note objects.</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReportNotes.id",            "description": "<p>The unique id of the post report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReportNotes.report_id",            "description": "<p>The unique id of the post report this note is for</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReportNotes.user_id",            "description": "<p>The unique id of the user who left the note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReportNotes.avatar",            "description": "<p>The URL to the avatar of the user who left the note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "postReportNotes.note",            "description": "<p>The note message that was left on the report</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "postReportNotes.created_at",            "description": "<p>Timestamp of when the report note was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "postReportNotes.updated_at",            "description": "<p>Timestamp of when the report note was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error retrieving the post report notes</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "GET",    "url": "/admin/reports/users",    "title": "(Admin) Page User Report",    "name": "PageUserReport",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to page through user moderation reports.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "page",            "defaultValue": "1",            "description": "<p>The page of user reports to retrieve</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "limit",            "defaultValue": "10",            "description": "<p>The number of user reports to retrieve per page</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"Pending\"",              "\"Reviwed\"",              "\"Ignored\"",              "\"Bad Report\""            ],            "optional": false,            "field": "filter",            "description": "<p>Used to filter reports by their status</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"created_at\"",              "\"priority\"",              "\"reporter_username\"",              "\"offender_username\"",              "\"offender_email\"",              "\"offender_created_at\""            ],            "optional": false,            "field": "field",            "defaultValue": "created_at",            "description": "<p>Indicates which column to sort by, used for table sorting</p> "          },          {            "group": "Query",            "type": "<p>boolean</p> ",            "optional": false,            "field": "desc",            "defaultValue": "false",            "description": "<p>Boolean indicating whether or not to sort the results in descending order</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "optional": true,            "field": "search",            "description": "<p>String used to search for a report by username</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "userReports",            "description": "<p>An array of user reports. Sort order varies depending on the query parameters passed in.</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReports.id",            "description": "<p>The unique id of the user report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReports.status",            "description": "<p>The status of the user report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReports.reviewer_user_id",            "description": "<p>The unique id of the user who reviewed the user report</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "userReports.offender_ban_expiration",            "description": "<p>If the user is banned, the expiration of their ban</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "userReports.offender_created_at",            "description": "<p>When the offending user created their account</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReports.offender_email",            "description": "<p>The email of the offending user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReports.offender_user_id",            "description": "<p>The unique id of the offending user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReports.offender_username",            "description": "<p>The username of the offending user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReports.reporter_reason",            "description": "<p>The reason for the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReports.reporter_user_id",            "description": "<p>The unique id of the reporting user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReports.reporter_username",            "description": "<p>The username of the reporting user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "userReports.created_at",            "description": "<p>Timestamp of when the user report was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "userReports.updated_at",            "description": "<p>Timestamp of when the user report was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error retrieving the user reports</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "GET",    "url": "/admin/reports/usernotes/:userReportId",    "title": "(Admin) Page User Report Notes",    "name": "PageUserReportNotes",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to page through user moderation report notes.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "userReportId",            "description": "<p>The unique id of the user report to retrieve notes for</p> "          }        ],        "Query": [          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "page",            "defaultValue": "1",            "description": "<p>The page of user report notes to retrieve</p> "          },          {            "group": "Query",            "type": "<p>mixed</p> ",            "size": "1..n",            "allowedValues": [              "\"all\""            ],            "optional": false,            "field": "limit",            "defaultValue": "10",            "description": "<p>The number of user report notes to retrieve per page</p> "          },          {            "group": "Query",            "type": "<p>boolean</p> ",            "optional": false,            "field": "desc",            "defaultValue": "false",            "description": "<p>Boolean indicating whether or not to sort the results in descending order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "userReportNotes",            "description": "<p>An array of user report note objects.</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReportNotes.id",            "description": "<p>The unique id of the user report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReportNotes.report_id",            "description": "<p>The unique id of the user report this note is for</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReportNotes.user_id",            "description": "<p>The unique id of the user who left the note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReportNotes.avatar",            "description": "<p>The URL to the avatar of the user who left the note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "userReportNotes.note",            "description": "<p>The note message that was left on the report</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "userReportNotes.created_at",            "description": "<p>Timestamp of when the report note was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "userReportNotes.updated_at",            "description": "<p>Timestamp of when the report note was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error retrieving the user report notes</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "PUT",    "url": "/admin/reports/posts",    "title": "(Admin) Update Post Report",    "name": "UpdatePostReport",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to update the status of a post moderation report.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The id of the post report note</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "allowedValues": [              "\"Pending\"",              "\"Reviewed\"",              "\"Ignored\"",              "\"Bad Report\""            ],            "optional": false,            "field": "status",            "description": "<p>The updated note status</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "reviewer_user_id",            "description": "<p>The id of the user updating the post report</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the post report which was created</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "status",            "description": "<p>The status of the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_user_id",            "description": "<p>The unique id of the user initiating the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_reason",            "description": "<p>The reporter's reason for reporting the offending post</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reviewer_user_id",            "description": "<p>The unique id of the user reviewing the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "offender_post_id",            "description": "<p>The unique id of the post being reported</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post report was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post report was updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error updating the post report</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "PUT",    "url": "/admin/reports/usernotes",    "title": "(Admin) Update Post Report Note",    "name": "UpdatePostReportNote",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to update an existing note on post moderation reports.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The id of the post report note</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "note",            "description": "<p>The updated note</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id for the post report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "report_id",            "description": "<p>The id of the post report to leave the note on</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The id of the user leaving the post report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user who left the post report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "avatar",            "description": "<p>The url to the avatar of the user who left the post report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "note",            "description": "<p>The note being left on the post report</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the post report note was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the post report note was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error updating the post report note</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "PUT",    "url": "/admin/reports/users",    "title": "(Admin) Update User Report",    "name": "UpdateUserReport",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to update the status of a user moderation report.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The id of the user report note</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "allowedValues": [              "\"Pending\"",              "\"Reviewed\"",              "\"Ignored\"",              "\"Bad Report\""            ],            "optional": false,            "field": "status",            "description": "<p>The updated note status</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "reviewer_user_id",            "description": "<p>The id of the user updating the user report</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the user report which was created</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "status",            "description": "<p>The status of the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_user_id",            "description": "<p>The unique id of the user initiating the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reporter_reason",            "description": "<p>The reporter's reason for reporting the offending user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "reviewer_user_id",            "description": "<p>The unique id of the user reviewing the report</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "offender_user_id",            "description": "<p>The unique id of the user being reported</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the user report was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the user report was updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error updating the user report</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Reports",    "type": "PUT",    "url": "/admin/reports/usernotes",    "title": "(Admin) Update User Report Note",    "name": "UpdateUserReportNote",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to update an existing note on user moderation reports.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The id of the user report note</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "note",            "description": "<p>The updated note</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id for the user report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "report_id",            "description": "<p>The id of the user report to leave the note on</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The id of the user leaving the user report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user who left the user report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "avatar",            "description": "<p>The url to the avatar of the user who left the user report note</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "note",            "description": "<p>The note being left on the user report</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the user report note was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the user report note was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an error updating the user report note</p> "          }        ]      }    },    "filename": "server/routes/admin/reports/config.js",    "groupTitle": "Reports"  },  {    "version": "0.3.0",    "group": "Settings",    "type": "GET",    "url": "/admin/settings",    "title": "(Admin) Find",    "name": "FindSettings",    "description": "<p>Used to fetch all web app settings. Allows admins to grab settings defined in config.js</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "config",            "description": "<p>See config.js in the root of the project</p> "          }        ]      }    },    "filename": "server/routes/admin/settings/config.js",    "groupTitle": "Settings"  },  {    "version": "0.3.0",    "group": "Settings",    "type": "POST",    "url": "/admin/settings",    "title": "(Admin) Update",    "name": "UpdateSettings",    "description": "<p>Used to update web app settings. Used in the admin panel.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "root",            "description": "<p>Path to the root directory of the project</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "host",            "description": "<p>The host address that the web app is running on</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": true,            "field": "port",            "description": "<p>The port the web app is running on</p> "          },          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": true,            "field": "log_enabled",            "description": "<p>Boolean indicating if the server should log to /logs</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "public_url",            "description": "<p>The public facing URL to access the web app</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "private_key",            "description": "<p>The private key for the web app</p> "          },          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": true,            "field": "verify_registration",            "description": "<p>Boolean indicating if users need verify their accounts via email</p> "          },          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": true,            "field": "login_required",            "description": "<p>Boolean indicating if users need to login to view posts</p> "          },          {            "group": "Payload",            "type": "<p>object</p> ",            "optional": true,            "field": "website",            "description": "<p>Object containing website configs</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "website.title",            "description": "<p>The title of the website</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "website.description",            "description": "<p>Website description text</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "website.keywords",            "description": "<p>Website keywords</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "website.logo",            "description": "<p>The logo for the website</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "website.favicon",            "description": "<p>The favicon for the website</p> "          },          {            "group": "Payload",            "type": "<p>object</p> ",            "optional": true,            "field": "emailer",            "description": "<p>Object containing configurations for the email server</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "emailer.sender",            "description": "<p>Email address that emails will be sent from</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "emailer.host",            "description": "<p>The SMTP host</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": true,            "field": "emailer.port",            "description": "<p>The SMTP port</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "emailer.user",            "description": "<p>The SMTP username</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "emailer.pass",            "description": "<p>The SMTP password</p> "          },          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": true,            "field": "emailer.secure",            "description": "<p>Boolean indicating whether or not to use SSL</p> "          },          {            "group": "Payload",            "type": "<p>object</p> ",            "optional": true,            "field": "images",            "description": "<p>Object containing image server configurations</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "allowedValues": [              "\"local\"",              "\"s3\""            ],            "optional": true,            "field": "images.storage",            "description": "<p>Where to store images</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": true,            "field": "images.max_size",            "description": "<p>Max image file size</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": true,            "field": "images.expiration",            "description": "<p>Expiration time for unused images</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": true,            "field": "images.interval",            "description": "<p>Interval for checking for unused images</p> "          },          {            "group": "Payload",            "type": "<p>object</p> ",            "optional": true,            "field": "images.local",            "description": "<p>Object containing local image server configurations</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "images.local.dir",            "description": "<p>Path to directory to store uploaded images</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "images.local.path",            "description": "<p>Path to relative to host of where to serve images</p> "          },          {            "group": "Payload",            "type": "<p>object</p> ",            "optional": true,            "field": "images.s3",            "description": "<p>Object containing s3 image server configurations</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "images.s3.root",            "description": "<p>The s3 root url</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "images.s3.dir",            "description": "<p>The s3 directory</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "images.s3.bucket",            "description": "<p>The s3 bucket</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "images.s3.region",            "description": "<p>The s3 region</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "images.s3.access_key",            "description": "<p>The s3 access key</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "images.s3.secret_key",            "description": "<p>The s3 secret key</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "config",            "description": "<p>Same object that was passed in is returned upon success</p> "          }        ]      }    },    "filename": "server/routes/admin/settings/config.js",    "groupTitle": "Settings"  },  {    "version": "0.3.0",    "group": "Settings",    "type": "GET",    "url": "/settings/web",    "title": "Website Configurations",    "name": "WebSettings",    "description": "<p>Used to fetch website settings such as the logo, favicon, website description/title and keywords</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the website</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "description",            "description": "<p>The description text for the website</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "keywords",            "description": "<p>Keywords to be used in the metatags of the website</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "favicon",            "description": "<p>URL for the favicon image</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "logo",            "description": "<p>URL for the forums logo image</p> "          }        ]      }    },    "filename": "server/routes/settings/config.js",    "groupTitle": "Settings"  },  {    "version": "0.3.0",    "group": "Threads",    "type": "POST",    "url": "/threads",    "title": "Create",    "name": "CreateThread",    "permission": [      {        "name": "User"      }    ],    "description": "<p>Used to create a new thread.</p> ",    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue creating the thread</p> "          }        ]      }    },    "filename": "server/routes/threads/config.js",    "groupTitle": "Threads",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the thread</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The thread's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The thread's body as it was entered in the editor by the user</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "board_id",            "description": "<p>The unique id of the board this thread is being created within</p> "          },          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": false,            "field": "locked",            "defaultValue": "false",            "description": "<p>Boolean indicating whether the thread is locked or unlocked</p> "          },          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": false,            "field": "sticky",            "defaultValue": "false",            "description": "<p>Boolean indicating whether the thread is stickied or not</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unqiue id of the post the thread is wrapping</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unqiue id of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The thread's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The thread's body as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the thread was created</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Threads",    "type": "GET",    "url": "/threads/:id",    "title": "Find",    "name": "FindThread",    "description": "<p>Used to find an existing thread.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the thread to find</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue looking up the thread</p> "          }        ]      }    },    "filename": "server/routes/threads/config.js",    "groupTitle": "Threads",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "board_id",            "description": "<p>The unique id of the board the thread belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "locked",            "description": "<p>Boolean indicating whether or not the thread is locked</p> "          },          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "sticky",            "description": "<p>Boolean indicating whether or not the thread is stickied</p> "          },          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "post_count",            "description": "<p>The number of posts this thread contains</p> "          },          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "user",            "description": "<p>Object containing info about user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user.id",            "description": "<p>The unique id of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user.username",            "description": "<p>The username of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the thread was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the thread was updated</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Threads",    "type": "POST",    "url": "/threads/import",    "title": "Import",    "name": "ImportThread",    "permission": [      {        "name": "Super Administrator"      }    ],    "description": "<p>Used to import an existing thread. Currently only SMF is supported.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>object</p> ",            "optional": false,            "field": "smf",            "description": "<p>Object containing SMF metadata</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": false,            "field": "smf.ID_BOARD",            "description": "<p>Legacy smf board id</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": false,            "field": "smf.ID_TOPIC",            "description": "<p>Legacy smf thread id</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the thread</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The thread's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The thread's body as it was entered in the editor by the user</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "board_id",            "description": "<p>The unique id of the board this thread is being created within</p> "          },          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": false,            "field": "locked",            "defaultValue": "false",            "description": "<p>Boolean indicating whether the thread is locked or unlocked</p> "          },          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": false,            "field": "sticky",            "defaultValue": "false",            "description": "<p>Boolean indicating whether the thread is stickied or not</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the thread was updated</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "imported_at",            "description": "<p>Timestamp of when the thread was imported</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unqiue id of the post the thread is wrapping</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "thread_id",            "description": "<p>The unqiue id of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "body",            "description": "<p>The thread's body with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_body",            "description": "<p>The thread's body as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the thread was created</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue importing the thread</p> "          }        ]      }    },    "filename": "server/routes/threads/config.js",    "groupTitle": "Threads"  },  {    "version": "0.3.0",    "group": "Threads",    "type": "GET",    "url": "/threads/:id/lock",    "title": "Lock",    "name": "LockThread",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator, User (Thread Author Only)"      }    ],    "description": "<p>Used to lock a thread and prevent any additional posts.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the thread to lock</p> "          }        ],        "Payload": [          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": false,            "field": "status",            "defaultValue": "true",            "description": "<p>Boolean indicating lock status, true if locked false if unlocked.</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>User doesn't have permissions to lock the thread</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue locking the thread</p> "          }        ]      }    },    "filename": "server/routes/threads/config.js",    "groupTitle": "Threads",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "board_id",            "description": "<p>The unique id of the board the thread belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "locked",            "description": "<p>Boolean indicating whether or not the thread is locked</p> "          },          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "sticky",            "description": "<p>Boolean indicating whether or not the thread is stickied</p> "          },          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "post_count",            "description": "<p>The number of posts this thread contains</p> "          },          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "user",            "description": "<p>Object containing info about user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user.id",            "description": "<p>The unique id of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user.username",            "description": "<p>The username of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the thread was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the thread was updated</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Threads",    "type": "GET",    "url": "/threads/:id/move",    "title": "Move",    "name": "MoveThread",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to move a thread to a different board.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the thread to sticky</p> "          }        ],        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "newBoardId",            "description": "<p>The unique id of the board to move this thread into.</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>User attempted to move the thread to the same board it is already in</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>User doesn't have permissions to move the thread</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue moving the thread</p> "          }        ]      }    },    "filename": "server/routes/threads/config.js",    "groupTitle": "Threads",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "board_id",            "description": "<p>The unique id of the board the thread belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "locked",            "description": "<p>Boolean indicating whether or not the thread is locked</p> "          },          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "sticky",            "description": "<p>Boolean indicating whether or not the thread is stickied</p> "          },          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "post_count",            "description": "<p>The number of posts this thread contains</p> "          },          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "user",            "description": "<p>Object containing info about user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user.id",            "description": "<p>The unique id of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user.username",            "description": "<p>The username of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the thread was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the thread was updated</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Threads",    "type": "GET",    "url": "/threads",    "title": "Page By Board",    "name": "PageThreadsByBoard",    "description": "<p>Used to page through a board's threads.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>string</p> ",            "optional": false,            "field": "board_id",            "description": "<p>The board whose threads to page through</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "page",            "defaultValue": "1",            "description": "<p>The page of threads to bring back</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "optional": false,            "field": "limit",            "defaultValue": "10",            "description": "<p>The number of threads to bring back per page</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>array</p> ",            "optional": false,            "field": "threads",            "description": "<p>An array containing threads for the requested board, page and limit</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue retrieving the threads</p> "          }        ]      }    },    "filename": "server/routes/threads/config.js",    "groupTitle": "Threads"  },  {    "version": "0.3.0",    "group": "Threads",    "type": "GET",    "url": "/threads/:id/sticky",    "title": "Sticky",    "name": "StickyThread",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to sticky a thread. This will cause the thread to show up at the top of the board it's posted within.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the thread to sticky</p> "          }        ],        "Payload": [          {            "group": "Payload",            "type": "<p>boolean</p> ",            "optional": false,            "field": "status",            "defaultValue": "true",            "description": "<p>Boolean indicating sticky status, true if stickied false if not.</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>User doesn't have permissions to sticky the thread</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was an issue stickying the thread</p> "          }        ]      }    },    "filename": "server/routes/threads/config.js",    "groupTitle": "Threads",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "board_id",            "description": "<p>The unique id of the board the thread belongs to</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "title",            "description": "<p>The title of the thread</p> "          },          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "locked",            "description": "<p>Boolean indicating whether or not the thread is locked</p> "          },          {            "group": "Success 200",            "type": "<p>boolean</p> ",            "optional": false,            "field": "sticky",            "description": "<p>Boolean indicating whether or not the thread is stickied</p> "          },          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "post_count",            "description": "<p>The number of posts this thread contains</p> "          },          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "user",            "description": "<p>Object containing info about user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user.id",            "description": "<p>The unique id of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user.username",            "description": "<p>The username of the user who created the thread</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the thread was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the thread was updated</p> "          }        ]      }    }  },  {    "version": "0.3.0",    "group": "Users",    "type": "PUT",    "url": "/admin/users/roles/add",    "title": "(Admin) Add Roles",    "name": "AddUserRoleAdmin",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>Used to add a role or roles to a user. This allows Administrators to add new (Super) Administrators and (Global) Moderators.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user to grant the role to</p> "          },          {            "group": "Payload",            "type": "<p>string[]</p> ",            "allowedValues": [              "\"Super Administrator\"",              "\"Administrator\"",              "\"Global Moderator\"",              "\"Moderator\"",              "\"User\""            ],            "optional": false,            "field": "roles",            "description": "<p>An array of the roles you would like to add to the user</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The user's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "email",            "description": "<p>The user's email address</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the user's account was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the user's account was last updated</p> "          },          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "roles",            "description": "<p>An array containing the users role objects</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.id",            "description": "<p>The unique id of the role</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.name",            "description": "<p>The name of the role</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.description",            "description": "<p>The description of the role</p> "          },          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "roles.permissions",            "description": "<p>The permissions that this role has</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "roles.created_at",            "description": "<p>Timestamp of when the role was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "roles.updated_at",            "description": "<p>Timestamp of when the role was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error adding roles to the user</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "PUT",    "url": "/admin/users/ban",    "title": "(Admin) Ban",    "name": "BanUsersAdmin",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>This allows Administrators and Moderators to ban users.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user to ban</p> "          },          {            "group": "Payload",            "type": "<p>date</p> ",            "optional": false,            "field": "expiration",            "description": "<p>The expiration date for the ban, when not defined ban is considered permanent</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the row in users.bans</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user being banned</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "expiration",            "description": "<p>Timestamp of when the user's ban expires</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the ban was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the ban was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error banning the user</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "GET",    "url": "/admin/users/admins/count",    "title": "(Admin) Count Administrators",    "name": "CountAdminUsersAdmin",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>This allows Administrators to get a count of how many admin users are registered. This is used in the admin panel for paginating through admin users.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "count",            "description": "<p>The number of admin users registered</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error calculating the admin user count</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "GET",    "url": "/admin/users/moderators/count",    "title": "(Admin) Count Moderators",    "name": "CountModUsersAdmin",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>This allows Administrators to get a count of how many mod users are registered. This is used in the admin panel for paginating through mod users.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "count",            "description": "<p>The number of mod users registered</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error calculating the mod user count</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "GET",    "url": "/admin/users/count",    "title": "(Admin) Count Users",    "name": "CountUsersAdmin",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>This allows Administrators to get a count of how many users are registered. This is used in the admin panel for paginating through users.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"banned\""            ],            "optional": true,            "field": "filter",            "description": "<p>If banned is passed in, route will return count of banned users.</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "optional": true,            "field": "search",            "description": "<p>Used to filter count by search string</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "count",            "description": "<p>The number of users registered given the passed in parameters</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error calculating the user count</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "GET",    "url": "/users/:username",    "title": "Find",    "name": "FindUser",    "description": "<p>Find a user by their username.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user to find</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The user's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "avatar",            "description": "<p>URL to the user's avatar image</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "signature",            "description": "<p>The user's signature with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_signature",            "description": "<p>The user's signature as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "post_count",            "description": "<p>The number of posts made by this user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The user's actual name (e.g. John Doe)</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "website",            "description": "<p>URL to the user's website</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "gender",            "description": "<p>The user's gender</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "dob",            "description": "<p>The user's date of birth</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "location",            "description": "<p>The user's location</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "language",            "description": "<p>The user's native language (e.g. English)</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the user's account was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the user's account was last updated</p> "          },          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "roles",            "description": "<p>An array containing the users role objects</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.id",            "description": "<p>The unique id of the role</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.name",            "description": "<p>The name of the role</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.description",            "description": "<p>The description of the role</p> "          },          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "roles.permissions",            "description": "<p>The permissions that this role has</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "roles.created_at",            "description": "<p>Timestamp of when the role was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "roles.updated_at",            "description": "<p>Timestamp of when the role was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>The user doesn't exist</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error looking up the user</p> "          }        ]      }    },    "filename": "server/routes/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "GET",    "url": "/admin/users/:username",    "title": "(Admin) Find",    "name": "FindUserAdmin",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Find a user by their username. (Includes user's email)</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The username of the user to find</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The user's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "avatar",            "description": "<p>URL to the user's avatar image</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "signature",            "description": "<p>The user's signature with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "raw_signature",            "description": "<p>The user's signature as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "post_count",            "description": "<p>The number of posts made by this user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "name",            "description": "<p>The user's actual name (e.g. John Doe)</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "email",            "description": "<p>The user's email address</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "website",            "description": "<p>URL to the user's website</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "gender",            "description": "<p>The user's gender</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "dob",            "description": "<p>The user's date of birth</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "location",            "description": "<p>The user's location</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "language",            "description": "<p>The user's native language (e.g. English)</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the user's account was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the user's account was last updated</p> "          },          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "roles",            "description": "<p>An array containing the users role objects</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.id",            "description": "<p>The unique id of the role</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.name",            "description": "<p>The name of the role</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.description",            "description": "<p>The description of the role</p> "          },          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "roles.permissions",            "description": "<p>The permissions that this role has</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "roles.created_at",            "description": "<p>Timestamp of when the role was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "roles.updated_at",            "description": "<p>Timestamp of when the role was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>The user doesn't exist</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error looking up the user</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "POST",    "url": "/users/import",    "title": "Import",    "name": "ImportUser",    "permission": [      {        "name": "Super Administrator"      }    ],    "description": "<p>Import a user from an existing forum. Currently only SMF is supported</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "email",            "description": "<p>The user's email</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "name",            "description": "<p>The user's name</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "website",            "description": "<p>URL to user's website</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "btcAddress",            "description": "<p>User's bitcoin wallet address</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "gender",            "description": "<p>The user's gender</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "dob",            "description": "<p>String version of the user's dob</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "location",            "description": "<p>The user's geographical location</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "language",            "description": "<p>The user's native language</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "position",            "description": "<p>The user's position title</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "raw_signature",            "description": "<p>The user's signature as it was entered in the editor by the user</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "avatar",            "description": "<p>URL to the user's avatar</p> "          },          {            "group": "Payload",            "type": "<p>date</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Date that the user's account was created</p> "          },          {            "group": "Payload",            "type": "<p>date</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Date that the user's account was last updated</p> "          },          {            "group": "Payload",            "type": "<p>object</p> ",            "optional": false,            "field": "smf",            "description": "<p>Object containing the user's legacy SMF data</p> "          },          {            "group": "Payload",            "type": "<p>number</p> ",            "optional": false,            "field": "smf.ID_MEMBER",            "description": "<p>The user's legacy smf id</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The user's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "email",            "description": "<p>The user's email</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "name",            "description": "<p>The user's name</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "website",            "description": "<p>URL to user's website</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "btcAddress",            "description": "<p>User's bitcoin wallet address</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "gender",            "description": "<p>The user's gender</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": true,            "field": "dob",            "description": "<p>Timestamp of the user's dob</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "location",            "description": "<p>The user's geographical location</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "language",            "description": "<p>The user's native language</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "position",            "description": "<p>The user's position title</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "raw_signature",            "description": "<p>The user's signature as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "avatar",            "description": "<p>URL to the user's avatar</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the user's account was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the user's account was last updated</p> "          },          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "smf",            "description": "<p>Object containing the user's legacy SMF data</p> "          },          {            "group": "Success 200",            "type": "<p>number</p> ",            "optional": false,            "field": "smf.ID_MEMBER",            "description": "<p>The user's legacy smf id</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error importing the user</p> "          }        ]      }    },    "filename": "server/routes/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "GET",    "url": "/admin/users/admins",    "title": "(Admin) Page Admins",    "name": "PageAdminUsersAdmin",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>This allows Administrators to page through all registered admins.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>number</p> ",            "size": "1..n",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>The page of registered admin users to retrieve</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "size": "1..n",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>The number of admin users to retrieve per page</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"username\"",              "\"email\"",              "\"updated_at\"",              "\"created_at\"",              "\"roles\""            ],            "optional": true,            "field": "field",            "defaultValue": "username",            "description": "<p>The db field to sort the results by</p> "          },          {            "group": "Query",            "type": "<p>boolean</p> ",            "optional": true,            "field": "desc",            "defaultValue": "false",            "description": "<p>Boolean indicating whether or not to sort the results in descending order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "admins",            "description": "<p>An array of admin user objects</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "admins.user_id",            "description": "<p>The unique id of the user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "admins.username",            "description": "<p>The username of the user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "admins.email",            "description": "<p>The email of the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "admins.created_at",            "description": "<p>Timestamp of when the admin user was created</p> "          },          {            "group": "Success 200",            "type": "<p>string[]</p> ",            "optional": false,            "field": "admins.roles",            "description": "<p>An array containing the admin roles the user has</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "admins.roles.name",            "description": "<p>The string name of the role</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error retrieving the admins</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "GET",    "url": "/admin/users/moderators",    "title": "(Admin) Page Mods",    "name": "PageModUsersAdmin",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>This allows Administrators to page through all registered mods.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>number</p> ",            "size": "1..n",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>The page of registered mod users to retrieve</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "size": "1..n",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>The number of mod users to retrieve per page</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"username\"",              "\"email\"",              "\"updated_at\"",              "\"created_at\"",              "\"roles\""            ],            "optional": true,            "field": "field",            "defaultValue": "username",            "description": "<p>The db field to sort the results by</p> "          },          {            "group": "Query",            "type": "<p>boolean</p> ",            "optional": true,            "field": "desc",            "defaultValue": "false",            "description": "<p>Boolean indicating whether or not to sort the results in descending order</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "mods",            "description": "<p>An array of mod user objects</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "mods.user_id",            "description": "<p>The unique id of the user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "mods.username",            "description": "<p>The username of the user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "mods.email",            "description": "<p>The email of the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "mods.created_at",            "description": "<p>Timestamp of when the mod user was created</p> "          },          {            "group": "Success 200",            "type": "<p>string[]</p> ",            "optional": false,            "field": "mods.roles",            "description": "<p>An array containing the mod roles the user has</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "mods.roles.name",            "description": "<p>The string name of the role</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error retrieving the mods</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "GET",    "url": "/admin/users",    "title": "(Admin) Page Users",    "name": "PageUsersAdmin",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>This allows Administrators to page through all registered users.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>number</p> ",            "size": "1..n",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>The page of registered users to retrieve</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "size": "1..n",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>The number of users to retrieve per page</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"username\"",              "\"email\"",              "\"updated_at\"",              "\"created_at\"",              "\"imported_at\"",              "\"ban_expiration\""            ],            "optional": true,            "field": "field",            "defaultValue": "username",            "description": "<p>The db field to sort the results by</p> "          },          {            "group": "Query",            "type": "<p>boolean</p> ",            "optional": true,            "field": "desc",            "defaultValue": "false",            "description": "<p>Boolean indicating whether or not to sort the results in descending order</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "allowedValues": [              "\"banned\""            ],            "optional": true,            "field": "filter",            "description": "<p>If banned is passed in only banned users are returned</p> "          },          {            "group": "Query",            "type": "<p>string</p> ",            "optional": true,            "field": "search",            "description": "<p>Username to search for</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "users",            "description": "<p>An array of user objects</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "users.id",            "description": "<p>The unique id of the user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "users.username",            "description": "<p>The username of the user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "users.email",            "description": "<p>The email of the user</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "users.ban_expiration",            "description": "<p>Timestamp of when the user's ban expires</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "users.created_at",            "description": "<p>Timestamp of when the user was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "users.updated_at",            "description": "<p>Timestamp of when the user was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error retrieving the users</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "PUT",    "url": "/admin/users/roles/remove",    "title": "(Admin) Remove Roles",    "name": "RemoveUserRoleAdmin",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>Used to remove a role or roles to a user. This allows Administrators to remove roles from an account.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user to grant the role to</p> "          },          {            "group": "Payload",            "type": "<p>string[]</p> ",            "allowedValues": [              "\"Super Administrator\"",              "\"Administrator\"",              "\"Global Moderator\"",              "\"Moderator\"",              "\"User\""            ],            "optional": false,            "field": "roles",            "description": "<p>An array of the roles you would like to remove from the user</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The user's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "email",            "description": "<p>The user's email address</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the user's account was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the user's account was last updated</p> "          },          {            "group": "Success 200",            "type": "<p>object[]</p> ",            "optional": false,            "field": "roles",            "description": "<p>An array containing the users role objects</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.id",            "description": "<p>The unique id of the role</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.name",            "description": "<p>The name of the role</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "roles.description",            "description": "<p>The description of the role</p> "          },          {            "group": "Success 200",            "type": "<p>object</p> ",            "optional": false,            "field": "roles.permissions",            "description": "<p>The permissions that this role has</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "roles.created_at",            "description": "<p>Timestamp of when the role was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "roles.updated_at",            "description": "<p>Timestamp of when the role was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error removing roles from the user</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "GET",    "url": "/admin/users/search",    "title": "(Admin) Search Usernames",    "name": "SearchUsernamesAdmin",    "permission": [      {        "name": "Super Administrator, Administrator"      }    ],    "description": "<p>This allows Administrators to search usernames. This is used in the admin panel to autocomplete usernames when trying to quickly find a user.</p> ",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "<p>string</p> ",            "optional": false,            "field": "username",            "description": "<p>Username to search for, doesn't have to be a full username</p> "          },          {            "group": "Query",            "type": "<p>number</p> ",            "optional": true,            "field": "limit",            "defaultValue": "15",            "description": "<p>The number of usernames to return while searching</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string[]</p> ",            "optional": false,            "field": "usernames",            "description": "<p>An array containing usernames with accounts on the forum</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "usernames.username",            "description": "<p>Unique username of a user</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error searching for usernames</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "PUT",    "url": "/admin/users/unban",    "title": "(Admin) Unban",    "name": "UnbanUsersAdmin",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>This allows Administrators and Moderators to unban users. Ban expiration is set to current timestamp, expiring it immediately</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user to unban</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The unique id of the row in users.bans</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The unique id of the user being unbanned</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "expiration",            "description": "<p>Timestamp of when the user's ban expires (current timestamp)</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "created_at",            "description": "<p>Timestamp of when the ban was created</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": false,            "field": "updated_at",            "description": "<p>Timestamp of when the ban was last updated</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error unbanning the user</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "PUT",    "url": "/users",    "title": "Update",    "name": "UpdateUser",    "permission": [      {        "name": "User (Users may update their own account)"      }    ],    "description": "<p>Used to update user information such as profile fields, or passwords.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The user's unique id</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "email",            "description": "<p>The user's email</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "old_password",            "description": "<p>The user's old password (used for changing password)</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "password",            "description": "<p>The user's new passowrd (used for changing password)</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "confirmation",            "description": "<p>The user's new password confirmation (used for changing password)</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "name",            "description": "<p>The user's name</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "website",            "description": "<p>URL to user's website</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "btcAddress",            "description": "<p>User's bitcoin wallet address</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "gender",            "description": "<p>The user's gender</p> "          },          {            "group": "Payload",            "type": "<p>date</p> ",            "optional": true,            "field": "dob",            "description": "<p>Date version of the user's dob</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "location",            "description": "<p>The user's geographical location</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "language",            "description": "<p>The user's native language</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "position",            "description": "<p>The user's position title</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "raw_signature",            "description": "<p>The user's signature as it was entered in the editor by the user</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "signature",            "description": "<p>The user's signature with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "avatar",            "description": "<p>URL to the user's avatar</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The user's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "email",            "description": "<p>The user's email</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "name",            "description": "<p>The user's name</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "website",            "description": "<p>URL to user's website</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "btcAddress",            "description": "<p>User's bitcoin wallet address</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "gender",            "description": "<p>The user's gender</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": true,            "field": "dob",            "description": "<p>Timestamp of the user's dob</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "location",            "description": "<p>The user's geographical location</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "language",            "description": "<p>The user's native language</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "position",            "description": "<p>The user's position title</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "raw_signature",            "description": "<p>The user's signature as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "signature",            "description": "<p>The user's signature with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "avatar",            "description": "<p>URL to the user's avatar</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>Occurs when resetting password and an invalid old password is provided</p> "          }        ],        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error updating the user</p> "          }        ]      }    },    "filename": "server/routes/users/config.js",    "groupTitle": "Users"  },  {    "version": "0.3.0",    "group": "Users",    "type": "PUT",    "url": "/admin/users",    "title": "(Admin) Update",    "name": "UpdateUserAdmin",    "permission": [      {        "name": "Super Administrator, Administrator, Global Moderator, Moderator"      }    ],    "description": "<p>Used to update user information such as profile fields, or passwords. Allows admins and mods to update user's account if neccessary.</p> ",    "parameter": {      "fields": {        "Payload": [          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The user's unique id</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "email",            "description": "<p>The user's email</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "password",            "description": "<p>The user's new passowrd (used for changing password)</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "confirmation",            "description": "<p>The user's new password confirmation (used for changing password)</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "name",            "description": "<p>The user's name</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "website",            "description": "<p>URL to user's website</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "btcAddress",            "description": "<p>User's bitcoin wallet address</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "gender",            "description": "<p>The user's gender</p> "          },          {            "group": "Payload",            "type": "<p>date</p> ",            "optional": true,            "field": "dob",            "description": "<p>Date version of the user's dob</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "location",            "description": "<p>The user's geographical location</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "language",            "description": "<p>The user's native language</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "position",            "description": "<p>The user's position title</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "raw_signature",            "description": "<p>The user's signature as it was entered in the editor by the user</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "signature",            "description": "<p>The user's signature with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Payload",            "type": "<p>string</p> ",            "optional": true,            "field": "avatar",            "description": "<p>URL to the user's avatar</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": false,            "field": "id",            "description": "<p>The user's unique id</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "username",            "description": "<p>The user's username</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "email",            "description": "<p>The user's email</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "name",            "description": "<p>The user's name</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "website",            "description": "<p>URL to user's website</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "btcAddress",            "description": "<p>User's bitcoin wallet address</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "gender",            "description": "<p>The user's gender</p> "          },          {            "group": "Success 200",            "type": "<p>timestamp</p> ",            "optional": true,            "field": "dob",            "description": "<p>Timestamp of the user's dob</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "location",            "description": "<p>The user's geographical location</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "language",            "description": "<p>The user's native language</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "position",            "description": "<p>The user's position title</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "raw_signature",            "description": "<p>The user's signature as it was entered in the editor by the user</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "signature",            "description": "<p>The user's signature with any markup tags converted and parsed into html elements</p> "          },          {            "group": "Success 200",            "type": "<p>string</p> ",            "optional": true,            "field": "avatar",            "description": "<p>URL to the user's avatar</p> "          }        ]      }    },    "error": {      "fields": {        "Error 500": [          {            "group": "Error 500",            "optional": false,            "field": "InternalServerError",            "description": "<p>There was error updating the user</p> "          }        ]      }    },    "filename": "server/routes/admin/users/config.js",    "groupTitle": "Users"  }]